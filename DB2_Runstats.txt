#!/bin/ksh

#====================================================================================================================================
# This script generates CTRLM job on the SARS system
#
# Run this script as root , on any server configured with the SARS CTRLM client for QA
#====================================================================================================================================

function loadProfile {
  echo $0 :  "Num Parms : $#" : `date +%Y%m%d_%H%M%S`
  if [ $# -lt 1 ]
  then
    echo " ERROR : Not enough parameters, need at least 1"
    echo "Usage : $0 <DBNAME> <SCHEMA:optional>"
    exit 1
  else
    . ~/sqllib/db2profile
  fi
}

function setParms {
  echo "Start function : $0 : `date +%Y%m%d_%H%M%S`"
  export TITLE="RUNSTATS"
  export TMSTAMP=`date +%Y%m%d_%H%M`
  export DTSTAMP=`date +%Y%m%d`
  HOSTNAME=`hostname -s`
  export HOSTNAME=`echo $HOSTNAME |tr [A-Z] [a-z]`
  export ERR_FLAG="N"
  export MAIL_FROM="Jenkins"
  export MAIL_TO="riaan.vandeventer@interfront.co.za"
   

  #Set Input Variables
  export DBNAME=$1
  TABSCHEMA=$2
  export TABSCHEMA=`echo $TABSCHEMA |tr [A-Z] [a-z]`
    
  #Set Paths
  EXEPATH="/db2dba/scripts"                                                   #Home of script executable
  export LOGPATH="${EXEPATH}/logs"

  #Set Files
  export SCRIPTLOG=$LOGPATH/${TITLE}_"$TMSTAMP".log
  export SCRIPTLST=$LOGPATH/${TITLE}_"$TMSTAMP".lst
}

function setupPaths {
  echo $0 : `date +%Y%m%d_%H%M%S` |tee -a ${SCRIPTLOG}
  mkdir -p $LOGPATH
  touch $SCRIPTLOG
  pwd
  if [ "$?" -ne 0 ]
  then
    echo " ERROR : Can't create output file : $SCRIPTLOG"  |tee -a ${SCRIPTLOG}
    exit 1
  else
    echo "Writting log...."
    ls -last $SCRIPTLOG
  fi
 
}

function DatabaseConnection {
  echo "Start function : $0 ( ${1} ${2}) : `date +%Y%m%d_%H%M%S`" |tee -a ${SCRIPTLOG}
  ACTION=$1
  DBNAME=$2
  case $ACTION in
  connect)    db2 -v connect to $DBNAME
              RC=$?
              if [ "$RC" -ne 0 ]
              then
                  echo " ERROR : Can't connect to database : $DBNAME"    |tee -a ${SCRIPTLOG}
              exit 2
              fi;;
  disconnect) db2 -v terminate;;
  *)          echo "invallid option for $0"  |tee -a ${SCRIPTLOG} ;;
  esac
}

 

function GenerateTableList {
  #echo $0
  
  DatabaseConnection connect $DBNAME

  cd ${LOGPATH}
  
  if [ "$TABSCHEMA" = "" ]
  then 
      echo "Runstats for all schemas"
      db2 -x "select rtrim(tabschema)||'.'||rtrim(substr(tabname,1,70))
              from syscat.tables 
              where type = 'T' 
              order by card desc" > $SCRIPTLST
  else
      echo "Running stats on schema $TABSCHEMA only"
      db2 -x "select rtrim(tabschema)||'.'||rtrim(substr(tabname,1,70))
              from syscat.tables 
              where type = 'T'
                    and tabschema = upper('"$TABSCHEMA"')
                     order by card desc" > $SCRIPTLST
    fi
  echo "====================="
  cat $SCRIPTLST
  echo "====================="
  #DatabaseConnection disconnect
}

function ExecuteRunstats {
 
  DatabaseConnection connect $DBNAME
   

  if [ -s "$SCRIPTLST" ]
  then 
       cat ${SCRIPTLST} |while read TABNAME
       do
         echo "Table : ${TABNAME}"
         DB2CMD_RUNSTATS="runstats on table "$TABNAME" on all columns with distribution on all columns and detailed indexes all allow write access"
         echo "DB2CMD= $DB2CMD_RUNSTATS"
         db2 -v $DB2CMD_RUNSTATS                                                                    >> $SCRIPTLOG 2>&1
         RC=$?
         echo "Runstats "$TABNAME" - Return code = $RC"                                            |tee -a $SCRIPTLOG
         echo "              "                                                                      |tee -a $SCRIPTLOG
         if [ $RC -ne 0 ]
         then
             ERR_FLAG="Y"
             echo "Runstats failed, Return Code = "$RC" - "$TABNAME" "                             |tee -a $SCRIPTLOG
             echo "              "                                                                  |tee -a $SCRIPTLOG
        fi	
      done
  else
      echo "No tables to process"                                                                  |tee -a $SCRIPTLOG
  fi
  
  DatabaseConnection disconnect

}

function VerifyStatsStatus {
    DatabaseConnection connect $DBNAME
    DB2CMD_RUNSTATS="Select tabschema||'.'||tabname||' - ' statstime  from syscat.tables order by statstime"
    db2 -v $DB2CMD_RUNSTATS                                                                    |tee -a $SCRIPTLOG 2>&1
    DatabaseConnection disconnect

}

  
function listCurrentVars {
  #echo $0
 

  echo "#LOG FILE             : ${SCRIPTLOG};" 
  echo "#LIST                 : ${SCRIPTLST};" 
  echo "#HOST                 : ${HOSTNAME};"
  echo "#DBNAME               : ${DBNAME};"
  echo "#SCHEMA               : ${TABSCHEMA};"  
}
 

echo running $0 |tee -a ${SCRIPTLOG}
clear
loadProfile $1 $2 $3 $4
echo "set parms"
setParms $1 $2 $3 $4
echo "setup path"

setupPaths
echo "Create tab lst"
listCurrentVars
GenerateTableList
ExecuteRunstats
echo "Runstats completed at "`date`
#VerifyStatsStatus $1  
exit 0

